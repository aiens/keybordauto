name: Build Cross-Platform Apps

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false  # 不要因为一个平台失败就取消其他平台
      matrix:
        include:
          - os: windows-latest
            platform: windows
            ext: .exe
            python-cmd: python
          - os: ubuntu-latest
            platform: linux
            ext: ""
            python-cmd: python3
          - os: macos-latest
            platform: macos
            ext: .app
            python-cmd: python3

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
    
    - name: Install system dependencies (Ubuntu)
      if: matrix.platform == 'linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-tk python3-dev libx11-dev xvfb

    - name: Install Python dependencies
      run: |
        ${{ matrix.python-cmd }} -m pip install --upgrade pip
        ${{ matrix.python-cmd }} -m pip install -r requirements.txt

    - name: Create icon
      run: ${{ matrix.python-cmd }} create_icon.py

    - name: Build application (Linux with virtual display)
      if: matrix.platform == 'linux'
      run: |
        export DISPLAY=:99
        Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
        sleep 3
        ${{ matrix.python-cmd }} build_app.py

    - name: Build application (Windows/macOS)
      if: matrix.platform != 'linux'
      run: ${{ matrix.python-cmd }} build_app.py

    - name: Create release package
      run: ${{ matrix.python-cmd }} create_release.py

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: KeyboardAutomation-${{ matrix.platform }}
        path: releases/
        retention-days: 30

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')

    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
        merge-multiple: true

    - name: List downloaded files
      run: |
        echo "Downloaded artifacts:"
        find artifacts -type f -name "*.tar.gz" -o -name "*.zip" | head -20

    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        name: KeyboardAutomation v${{ github.run_number }}
        draft: false
        prerelease: false
        files: |
          artifacts/**/*.tar.gz
          artifacts/**/*.zip
        body: |
          ## 键盘自动化软件 v${{ github.run_number }}

          ### 📦 下载说明
          - **Windows用户**: 下载 `*-windows-*.zip` 文件
          - **macOS用户**: 下载 `*-macos-*.tar.gz` 文件
          - **Linux用户**: 下载 `*-linux-*.tar.gz` 文件

          ### 🚀 使用方法
          1. 解压下载的文件
          2. 运行对应的启动脚本或可执行文件
          3. 按照提示设置系统权限

          ### ⚠️ 注意事项
          - 首次运行需要设置辅助功能权限
          - Windows可能需要添加到杀毒软件白名单
          - 详细说明请查看包内的使用指南

          构建时间: ${{ github.run_id }}
          提交: ${{ github.sha }}
